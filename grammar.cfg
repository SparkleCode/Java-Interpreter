program → declaration* eof ;

declaration → varDecl
            | statement ;
statement   → exprStmt
            | printStmt
            | block ;

varDecl → "var" IDENTIFIER ( "=" expression )? ";" ;

exprStmt  → expression ";" ;
printStmt → "print" expression ";" ;
block     → "{" declaration* "}" ;

expression     → equality ;
equality       → comparison ( ( "!=" | "==" ) comparison )* ;
comparison     → addition ( ( ">" | ">=" | "<" | "<=" ) addition )* ;
addition       → multiplication ( ( "-" | "+" ) multiplication )* ;
multiplication → unary ( ( "/" | "*" ) unary )* ;
unary          → ( "!" | "-" ) unary ;
               | primary ;

primary  → "true" | "false" | "null" | "this"
         | NUMBER | STRING
         | "(" expression ")"
         | IDENTIFIER ;
